#ifndef EXPLOITS_H_
#define EXPLOITS_H_

#include "GUI.h"
#include "JNI.h"

namespace Exploits
{
    static uint64_t GetEpoch()
    {
        using namespace std::chrono;
        return duration_cast<milliseconds>(system_clock::now().time_since_epoch()).count();
    }

	static void InstantRightClick()
	{
		if (!GUI::Get()->no_right_click_delay)
			return;

		JNI::Get()->p_mapper->classes["Minecraft"]->fields["rightClickDelayTimer"]->SetValueInt(0.f);
	}

    static void AutoClick(int autoclick_speed, bool is_left_click)
    {
        if (!GUI::Get()->autoclick)
            return;

        if (is_left_click) {
            if (GetAsyncKeyState(VK_LBUTTON))
            {
                uint64_t curr_epoch{ GetEpoch() };
                static uint64_t last_epoch{ curr_epoch };
                static int last_rand{ rand() % GUI::Get()->max_autoclick_delay_randomizer };

                if (curr_epoch - last_epoch >= (autoclick_speed + last_rand))
                {
                    JNI::Get()->p_mapper->classes["Minecraft"]->methods["clickMouse"]->CallVoid();
                    last_epoch = curr_epoch;
                    last_rand = rand() % GUI::Get()->max_autoclick_delay_randomizer;
                }
            }
        }
        else {
            if (GetAsyncKeyState(VK_RBUTTON))
            {
                uint64_t curr_epoch{ GetEpoch() };
                static uint64_t last_epoch{ curr_epoch };
                static int last_rand{ rand() % GUI::Get()->max_autoclick_delay_randomizer };

                if (curr_epoch - last_epoch >= (autoclick_speed + last_rand))
                {
                    JNI::Get()->p_mapper->classes["Minecraft"]->methods["clickMouse"]->CallVoid();
                    last_epoch = curr_epoch;
                    last_rand = rand() % GUI::Get()->max_autoclick_delay_randomizer;
                }
            }
        }
    }

    static void AimAt(JNIClassInstance* entity)
    {
        
    }
    
    static void Test()
    {
        /*JNI::Get()->the_player->methods[]*/
    }
}

#endif